{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gabriel/Sites/listo.world/web/app/mu-plugins/listo-enquiry-form/src/components/form/comments/Comments.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport { EnquiryContext } from '../../../states/EnquiryContext';\nimport { Form, Input, Icon, Tooltip } from 'antd';\nimport { FormattedMessage, useIntl } from 'react-intl';\nconst TextArea = Input.TextArea;\n\nconst Comments = () => {\n  const intl = useIntl();\n\n  const _useContext = useContext(EnquiryContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        setEnquiry = _useContext2[1];\n\n  const updateComments = e => {\n    const InputComments = e.target.value;\n    setEnquiry(prevEnquiry => {\n      return _objectSpread({}, prevEnquiry, {\n        comments: InputComments\n      });\n    });\n  };\n\n  return React.createElement(Form.Item, {\n    label: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"Comments.label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"Comments.label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: React.createElement(FormattedMessage, {\n        id: \"Comments.help\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"info-circle-o\",\n      style: {\n        marginRight: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })))),\n    help: intl.formatMessage({\n      id: \"Comments.help\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    rows: 4,\n    onChange: updateComments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default Comments;","map":{"version":3,"sources":["/Users/gabriel/Sites/listo.world/web/app/mu-plugins/listo-enquiry-form/src/components/form/comments/Comments.js"],"names":["React","useContext","EnquiryContext","Form","Input","Icon","Tooltip","FormattedMessage","useIntl","TextArea","Comments","intl","setEnquiry","updateComments","e","InputComments","target","value","prevEnquiry","comments","marginRight","formatMessage","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,OAA5B,QAA2C,MAA3C;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;MAEQC,Q,GAAaL,K,CAAbK,Q;;AAER,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,IAAI,GAAGH,OAAO,EAApB;;AADqB,sBAEEP,UAAU,CAACC,cAAD,CAFZ;AAAA;AAAA,QAEZU,UAFY;;AAGrB,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5B,UAAMC,aAAa,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA/B;AACAL,IAAAA,UAAU,CAACM,WAAW,IAAI;AACxB,+BAAYA,WAAZ;AAAyBC,QAAAA,QAAQ,EAAEJ;AAAnC;AACD,KAFS,CAAV;AAGD,GALD;;AAOA,SACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,KAAK,EAAE;AAAEK,QAAAA,WAAW,EAAE;AAAf,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAFF,CAFJ;AAWE,IAAA,IAAI,EAAET,IAAI,CAACU,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAmB,IAAA,QAAQ,EAAET,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CA1BD;;AA4BA,eAAeH,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { EnquiryContext } from '../../../states/EnquiryContext';\nimport { Form, Input, Icon, Tooltip } from 'antd';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst { TextArea } = Input;\n\nconst Comments = () => {\n  const intl = useIntl();\n  const [, setEnquiry] = useContext(EnquiryContext);\n  const updateComments = (e) => {\n    const InputComments = e.target.value;\n    setEnquiry(prevEnquiry => {\n      return { ...prevEnquiry, comments: InputComments }\n    })\n  }\n\n  return (\n    <Form.Item\n      label={\n        <span>\n          <FormattedMessage id=\"Comments.label\" />\n          <em >\n            <FormattedMessage id=\"Comments.label\" />\n            <Tooltip title={<FormattedMessage id=\"Comments.help\" />}>\n              <Icon type=\"info-circle-o\" style={{ marginRight: 4 }} />\n            </Tooltip>\n          </em>\n        </span>}\n      help={intl.formatMessage({ id: \"Comments.help\" })} >\n      <TextArea rows={4} onChange={updateComments} />\n    </Form.Item >\n  )\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}