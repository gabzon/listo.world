{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gabriel/Sites/listo.world/web/app/mu-plugins/listo-enquiry-form/src/enquiry-form/components/form/dates/TravelDates.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport { EnquiryContext } from '../../../states/EnquiryContext';\nimport { Form, DatePicker, Row, Col, Select, Radio } from 'antd';\nimport { FormattedMessage, useIntl } from 'react-intl';\nconst Option = Select.Option;\nconst RangePicker = DatePicker.RangePicker;\n\nconst TravelDates = (_ref) => {\n  let form = _ref.form;\n  const intl = useIntl();\n  const getFieldDecorator = form.getFieldDecorator;\n\n  const _useContext = useContext(EnquiryContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        enquiry = _useContext2[0],\n        setEnquiry = _useContext2[1];\n\n  const dateFormat = 'YYYY/MM/DD';\n\n  const updateRoundTrip = e => {\n    let roundTrip = e.target.value;\n    setEnquiry(prevEnquiry => {\n      return _objectSpread({}, prevEnquiry, {\n        roundTrip: roundTrip\n      });\n    });\n  };\n\n  const updateFlexibility = e => {\n    setEnquiry(prevEnquiry => {\n      return _objectSpread({}, prevEnquiry, {\n        flexibility: e\n      });\n    });\n  };\n\n  const updateDates = (e, dates) => {\n    setEnquiry(prevEnquiry => {\n      return _objectSpread({}, prevEnquiry, {\n        deparetureDate: dates[0],\n        returnDate: dates[1]\n      });\n    });\n  };\n\n  const updateDate = (e, date) => {\n    setEnquiry(prevEnquiry => {\n      return _objectSpread({}, prevEnquiry, {\n        deparetureDate: date\n      });\n    });\n  };\n\n  const displayDatePicker = () => {\n    if (enquiry.roundTrip === 'round trip') {\n      return true;\n    }\n\n    if (enquiry.roundTrip === 'one way') {\n      return false;\n    }\n\n    if (enquiry.roundTrip === 'multiple') {\n      return true;\n    }\n  };\n\n  const datesFieldOptions = {\n    rules: [{\n      required: true,\n      message: React.createElement(FormattedMessage, {\n        id: \"Dates.required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })\n    }]\n  };\n  const flexibilityOptions = {\n    rules: [{\n      required: true,\n      message: React.createElement(FormattedMessage, {\n        id: \"Flexibility.required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })\n    }]\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Form.Item, {\n    label: \"Flexibility\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, getFieldDecorator('flexibility', flexibilityOptions)(React.createElement(Select, {\n    placeholder: \"Flexibility\",\n    onChange: updateFlexibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Option, {\n    value: \"exact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"Flexibility.exact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Option, {\n    value: \"+/- 3 days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"+/- 3 \", React.createElement(FormattedMessage, {\n    id: \"Flexibility.days\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(Option, {\n    value: \"+/- 1 week\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"+/- 1 \", React.createElement(FormattedMessage, {\n    id: \"Flexibility.week\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Option, {\n    value: \"+/- 2 weeks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"+/- 2 \", React.createElement(FormattedMessage, {\n    id: \"Flexibility.weeks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Option, {\n    value: \"+/- 1 Month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"+/- 1 \", React.createElement(FormattedMessage, {\n    id: \"Flexibility.month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(Option, {\n    value: \"whenever\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"Flexibility.whenever\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))))), React.createElement(Col, {\n    span: 13,\n    offset: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Radio.Group, {\n    value: enquiry.roundTrip,\n    onChange: updateRoundTrip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Radio.Button, {\n    value: \"round trip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"Mode.RoundTrip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(Radio.Button, {\n    value: \"one way\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"Mode.Oneway\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(Radio.Button, {\n    value: \"multiple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"Mode.Multiple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })))))), React.createElement(Form.Item, {\n    label: intl.formatMessage({\n      id: \"Dates.label\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, displayDatePicker() ? getFieldDecorator('travelDates', datesFieldOptions)(React.createElement(RangePicker, {\n    format: dateFormat,\n    onChange: updateDates,\n    placeholder: [intl.formatMessage({\n      id: \"Dates.departure\"\n    }), intl.formatMessage({\n      id: \"Dates.return\"\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })) : getFieldDecorator('travelDates', datesFieldOptions)(React.createElement(DatePicker, {\n    placeholder: intl.formatMessage({\n      id: \"Dates.single\"\n    }),\n    onChange: updateDate,\n    format: dateFormat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))));\n};\n\nexport default TravelDates;","map":{"version":3,"sources":["/Users/gabriel/Sites/listo.world/web/app/mu-plugins/listo-enquiry-form/src/enquiry-form/components/form/dates/TravelDates.js"],"names":["React","useContext","EnquiryContext","Form","DatePicker","Row","Col","Select","Radio","FormattedMessage","useIntl","Option","RangePicker","TravelDates","form","intl","getFieldDecorator","enquiry","setEnquiry","dateFormat","updateRoundTrip","e","roundTrip","target","value","prevEnquiry","updateFlexibility","flexibility","updateDates","dates","deparetureDate","returnDate","updateDate","date","displayDatePicker","datesFieldOptions","rules","required","message","flexibilityOptions","formatMessage","id"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { EnquiryContext } from '../../../states/EnquiryContext';\nimport { Form, DatePicker, Row, Col, Select, Radio } from 'antd';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\nconst TravelDates = ({ form }) => {\n    const intl = useIntl();\n    const { getFieldDecorator } = form;\n    const [enquiry, setEnquiry] = useContext(EnquiryContext);\n\n    const dateFormat = 'YYYY/MM/DD';\n\n    const updateRoundTrip = (e) => {\n        let roundTrip = e.target.value;        \n        setEnquiry(prevEnquiry => {\n            return { ...prevEnquiry, roundTrip: roundTrip }\n        });\n    }\n\n    const updateFlexibility = (e) => {\n        setEnquiry(prevEnquiry => {\n            return { ...prevEnquiry, flexibility: e }\n        })        \n    }\n\n    const updateDates = (e, dates) => {\n        setEnquiry(prevEnquiry => {\n            return { ...prevEnquiry, deparetureDate: dates[0], returnDate: dates[1] }\n        });\n    }\n\n    const updateDate = (e, date) => {\n        setEnquiry(prevEnquiry => {\n            return { ...prevEnquiry, deparetureDate: date,  }\n        });\n    }\n\n    const displayDatePicker = () => {\n        if ( enquiry.roundTrip === 'round trip') { return true }\n        if ( enquiry.roundTrip === 'one way') { return false }\n        if ( enquiry.roundTrip === 'multiple') { return true }\n    }\n\n    const datesFieldOptions = {\n        rules: [\n            {\n                required: true,\n                message: <FormattedMessage id=\"Dates.required\" />,\n            },\n        ]\n    }\n    const flexibilityOptions = {\n        rules: [\n            {\n                required: true,\n                message: <FormattedMessage id=\"Flexibility.required\" />\n            }\n        ]\n    }\n\n    return (\n        <>\n            <Form.Item label=\"Flexibility\">\n                <Row>\n                    <Col span={8}>                    \n                        {getFieldDecorator('flexibility', flexibilityOptions)(\n                            <Select placeholder=\"Flexibility\" onChange={updateFlexibility}>\n                                <Option value=\"exact\"><FormattedMessage id=\"Flexibility.exact\"/></Option>\n                                <Option value=\"+/- 3 days\">+/- 3 <FormattedMessage id=\"Flexibility.days\"/></Option>\n                                <Option value=\"+/- 1 week\">+/- 1 <FormattedMessage id=\"Flexibility.week\"/></Option>\n                                <Option value=\"+/- 2 weeks\">+/- 2 <FormattedMessage id=\"Flexibility.weeks\"/></Option>\n                                <Option value=\"+/- 1 Month\">+/- 1 <FormattedMessage id=\"Flexibility.month\"/></Option>\n                                <Option value=\"whenever\"><FormattedMessage id=\"Flexibility.whenever\"/></Option>\n                            </Select>\n                        )}\n                    </Col>\n                    <Col span={13} offset={1}>\n                        <Radio.Group value={enquiry.roundTrip} onChange={updateRoundTrip}>\n                            <Radio.Button value=\"round trip\"><FormattedMessage id=\"Mode.RoundTrip\" /></Radio.Button>\n                            <Radio.Button value=\"one way\"><FormattedMessage id=\"Mode.Oneway\" /></Radio.Button>\n                            <Radio.Button value=\"multiple\"><FormattedMessage id=\"Mode.Multiple\" /></Radio.Button>\n                        </Radio.Group>\n                    </Col>\n                </Row>\n            </Form.Item>\n            <Form.Item label={intl.formatMessage({id: \"Dates.label\"})}>                \n                { displayDatePicker() ?\n                    getFieldDecorator('travelDates', datesFieldOptions)(\n                        <RangePicker\n                            format={dateFormat}\n                            onChange={updateDates}\n                            placeholder={[intl.formatMessage({id: \"Dates.departure\"}), intl.formatMessage({id: \"Dates.return\"})]} />\n                    )\n                    : getFieldDecorator('travelDates', datesFieldOptions)(<DatePicker placeholder={intl.formatMessage({id:\"Dates.single\"})} onChange={updateDate} format={dateFormat} />)                                         \n                }\n            </Form.Item>\n        </>\n    )\n}\n\nexport default TravelDates;"]},"metadata":{},"sourceType":"module"}